pragma solidity 0.4.2;

//Enables us to remove the contract from the network.
contract mortal{
  //Variable that saves address of the user that is allowed to kill the contract.
  address owner;
  //Defines the owner of the contract upon initialization.
  function mortal(){
    owner = msg.sender;
  }
  //This function enables destruction of the contract as well as recovery of the funds upon death.
  function kill(){
    if (msg.sender == owner) selfdestruct(owner);
  }
}

//Our main contract that inherits functions and proprieties from "mortal".
contract alphaTalker is mortal{
  string public name;
  //Maps messages sent to the contract by senders.
  //It is only capable of remembering the last message.
  mapping (address => string) public userSentence;

  mapping (uint => string) public lastWords;
  //Variable that is used to send the desired message.
  string reply;
  //Called at the initialization of the contract and defines the string the contract returns.
  function alphaTalker(string talkerName, string _sentence) public{
    //Sets the name of the contract.
    name = talkerName;
    //Sets the message sent back to the sender.
    reply = _sentence;
  }

  //Main function of the contract that talks back to the user.
  function talk(string userMessage) returns (string){
    userSentence[msg.sender] = userMessage;
    return reply;
  }
}
